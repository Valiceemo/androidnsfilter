name: Build and Release APK

on:
  # This lets you run the build manually from the "Actions" tab
  workflow_dispatch:

  # This runs the build automatically every time you push to the "master" branch
  push:
    branches:
      - master

# ✅ ADD THIS BLOCK: This gives the workflow permission to create a release
permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1. Checks out your repository's code
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Sets up the correct Java version (Java 17)
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle' # This line caches dependencies to speed up builds

      # 3. Give the gradlew script permission to run
      - name: Grant execute permission to gradlew
        run: chmod +x gradlew

      # 4. This is the main build command
      - name: Build with Gradle
        run: ./gradlew assembleDebug
        
      # 5. ✅ THIS IS THE NEW STEP
      # It creates a new release and uploads the APK
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          # This creates a tag like "build-123" based on the run number
          tag_name: "build-${{ github.run_number }}"
          name: "Automated Build #${{ github.run_number }}"
          body: "Automated test build from the latest commit."
          # This flags it as a "pre-release," which is perfect for testing
          prerelease: true
          # This tells it which file(s) to upload
          files: app/build/outputs/apk/debug/app-debug.apk
        env:
          # This is a special token that is automatically available
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
